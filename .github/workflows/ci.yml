name: CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/cache@v1
          with:
            path: ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle
            restore-keys: |
              ${{ runner.os }}-gradle

      - name: Build with Gradle
        run: ./gradlew bootJar jibDockerBuild

      - if: github.event_name == 'push'
        name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - if: github.event_name == 'push'
        name: Push image to Github
        run: |
          IMAGE_ID=docker.pkg.github.com/devinsba/hockeystats-backend/nhl-job-seasons

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_ID $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '275.0.0'
          service_account_email: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY}}

      # Configure gcloud CLI
      - name: gcloud Set up
        run: |
          gcloud config set project hockeystats-me-dev

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      - run: |
          IMAGE_ID=docker.pkg.github.com/devinsba/hockeystats-backend/nhl-job-seasons
          docker tag $IMAGE_ID:latest gcr.io/hockeystats-me-dev/nhl-job-seasons:$GITHUB_SHA
          docker push gcr.io/hockeystats-me-dev/nhl-job-seasons:$GITHUB_SHA

      - name: Deploy
        run: |
          gcloud run deploy nhl-job-seasons \
            --region us-east4 \
            --image docker pull gcr.io/hockeystats-me-dev/nhl-job-seasons:$GITHUB_SHA \
            --platform managed
